pipeline {
  agent any

  parameters {
    booleanParam(name: 'BUILD_DOCKER_IMAGE', defaultValue: true, description: 'BUILD_DOCKER_IMAGE')
    booleanParam(name: 'PUSH_DOCKER_IMAGE', defaultValue: true, description: 'PUSH_DOCKER_IMAGE')
    booleanParam(name : 'DEPLOY_WORKLOAD', defaultValue : true, description : 'DEPLOY_WORKLOAD')

    // CI
    string(name: 'AWS_ACCOUNT_ID', defaultValue: '559121217486', description: 'AWS_ACCOUNT_ID')

    // CD
    string(name : 'TARGET_SVR_USER', defaultValue : 'ec2-user', description : 'TARGET_SVR_USER')
    string(name : 'TARGET_SVR_PATH', defaultValue : '/home/ec2-user/', description : 'TARGET_SVR_PATH')
    string(name : 'TARGET_SVR', defaultValue : '10.0.3.190', description : 'TARGET_SVR')
  }
  environment {
    REGION = 'ap-northeast-2'
    ECR_REPOSITORY_URI = "${params.AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-2.amazonaws.com"
  }

  stages {
    stage('============ Build Docker Image ============') {
      when {
        expression {
          return params.BUILD_DOCKER_IMAGE
        }
      }
      steps {
        dir("${env.WORKSPACE}/backend") {
          echo "${ECR_REPOSITORY_URI}"
          sh 'make env'
          sh 'ECR_REPOSITORY_URI=${ECR_REPOSITORY_URI} docker-compose -f docker/staging.yml build'
        }
      }
    }
    stage('============ Push Docker Image ============') {
      when {
        expression {
          return params.PUSH_DOCKER_IMAGE
        }
      }
      steps {
        dir("${env.WORKSPACE}/backend") {
          sh 'aws ecr get-login-password --region ${REGION} | docker login --username AWS --password-stdin ${ECR_REPOSITORY_URI}'
          sh 'ECR_REPOSITORY_URI=${ECR_REPOSITORY_URI} docker-compose -f docker/staging.yml push'
        }
      }
    }
    stage('============ Deploy workload ============') {
      when { expression { return params.DEPLOY_WORKLOAD } }
      steps {
          sshagent (credentials: ['aws_ec2_user_ssh']) {
              sh """#!/bin/bash
                  scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
                      ${env.WORKSPACE}/backend/docker/staging.yml \
                      ${params.TARGET_SVR_USER}@${params.TARGET_SVR}:${params.TARGET_SVR_PATH};
              """
          }
      }
    }
  }
}

// post {
//   success {
//     slackSend(
//       channel: '#jenkins',
//       color: 'good',
//       message: "✅ Job:${env.JOB_NAME}, Build num:#${env.BUILD_NUMBER} (<${env.RUN_DISPLAY_URL}|open job detail>)"
//     )
//   }
//   failure {
//     slackSend(
//       channel: '#jenkins',
//       color: 'danger',
//       message: "⛔ Job:${env.JOB_NAME}, Build num:#${env.BUILD_NUMBER} @channel (<${env.RUN_DISPLAY_URL}|open job detail>)"
//     )
//   }
// }
